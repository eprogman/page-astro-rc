---
const { title, description } = Astro.props;
---

<div
    class="flex justify-between border-t-2 py-7 px-2 items-center section_preguntas"
>
    <h2>{title}</h2>
    <p class="section3_text">
        {description}
    </p>
    <button class="button_section3_minus">
        <svg
            width="26"
            height="25"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="1"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="icon icon-tabler icons-tabler-outline icon-tabler-minus"
            ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
                d="M5 12l14 0"></path></svg
        >
    </button>
    <button class="button_section3_plus">
        <svg
            width="26"
            height="23"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="1"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="icon icon-tabler icons-tabler-outline icon-tabler-plus"
            ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
                d="M12 5l0 14"></path><path d="M5 12l14 0"></path></svg
        >
    </button>
</div>
<div></div>

<script>
    const buton_minus = document.querySelectorAll(".button_section3_minus");
    const buton_plus = document.querySelectorAll(".button_section3_plus");
    const text = document.querySelectorAll(".section3_text");

    text.forEach((element) => {
        element.classList.add("icon_inactive");
    });

    buton_plus.forEach((element) => {
        element.classList.add("icon_active");
    });

    buton_minus.forEach((element) => {
        element.classList.add("icon_inactive");
    });

    function funState(buttonType: "plus" | "minus", text_evento: Element) {
        const parentElement = text_evento.closest(".section_preguntas");
        const svgplus = parentElement?.querySelector(".button_section3_plus");
        const svgminus = parentElement?.querySelector(".button_section3_minus");

        if (svgplus && svgminus) {
            svgminus.classList.toggle("icon_active", buttonType === "plus");
            svgminus.classList.toggle("icon_inactive", buttonType === "minus");

            svgplus.classList.toggle("icon_inactive", buttonType === "plus");
            svgplus.classList.toggle("icon_active", buttonType === "minus");

            text_evento.classList.toggle("icon_active", buttonType === "plus");
            text_evento.classList.toggle(
                "icon_inactive",
                buttonType === "minus",
            );
        }
    }

    function getTexto(event: Event) {
        return (event.target as HTMLElement)
            .closest(".section_preguntas")
            ?.querySelector(".section3_text");
    }

    buton_plus.forEach((elemento2) => {
        elemento2.addEventListener("click", (event) => {
            const text_evento = getTexto(event);
            if (text_evento) {
                funState("plus", text_evento);
            }
        });
    });

    buton_minus.forEach((elemento1) => {
        elemento1.addEventListener("click", (event) => {
            const text_evento = getTexto(event);
            if (text_evento) {
                funState("minus", text_evento);
            }
        });
    });
</script>

<style>
    h2 {
        font-size: 1.1em;
        width: 60%;
    }
    p {
        font-size: 0.6em;
        width: 80%;
        text-align: justify;
        padding: 0 10px;
        text-justify: auto;
    }
    button {
        border-radius: 50%;
        border: none;
        background: conic-gradient(at bottom right, #000000, #150050, #3f0071);
        color: #f5f5f5;
        font-weight: bold;
        cursor: pointer;
        padding: 7px;
        border: 1px solid white;
    }

    .icon_inactive {
        display: none;
    }
    .icon_active {
        display: block;
    }
</style>
